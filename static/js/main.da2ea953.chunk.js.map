{"version":3,"sources":["components/Accordion/ChevronRightIcon.js","components/Accordion/styles.js","components/Accordion/Accordion.js","utils/mock.js","App.js","reportWebVitals.js","index.js"],"names":["ChevronRightIcon","width","height","xmlns","fillRule","clipRule","d","Wrapper","styled","div","Header","Icon","isOpen","Text","p","Accordion","header","text","useState","setOpen","onClick","mock","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAAaA,EACX,qBAAKC,MAAM,KAAKC,OAAO,KAAKC,MAAM,6BAAlC,SACE,sBACEC,SAAS,UACTC,SAAS,UACTC,EAAE,8G,cCHKC,EAAUC,IAAOC,IAAV,wFAMPC,EAASF,IAAOC,IAAV,8GAONE,EAAOH,IAAOC,IAAV,yHAIA,qBAAGG,OAAsB,kBAAoB,UAIjDC,EAAOL,IAAOM,EAAV,mKAGD,qBAAGF,OAAuB,QAAU,OCtBvCG,EAAY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAAW,EACnBC,oBAAS,GADU,mBACtCN,EADsC,KAC9BO,EAD8B,KAE7C,OACE,eAACZ,EAAD,WACE,eAACG,EAAD,CACEU,QAAS,WACPD,GAASP,IAFb,UAKE,6BAAKI,IACL,cAACL,EAAD,CAAMC,OAAQA,EAAd,SAAuBZ,OAEvB,cAACa,EAAD,CAAMD,OAAQA,EAAd,SAAuBK,QChBlBI,EACH,cADGA,EAEN,+bCIQC,EAFH,kBAAM,cAAC,EAAD,CAAWN,OAAQK,EAAaJ,KAAMI,KCQzCE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.da2ea953.chunk.js","sourcesContent":["export const ChevronRightIcon = (\r\n  <svg width='24' height='24' xmlns='http://www.w3.org/2000/svg'>\r\n    <path\r\n      fillRule='evenodd'\r\n      clipRule='evenodd'\r\n      d='M11.293 8.293a1 1 0 011.414 0l4 4a1 1 0 01-1.414 1.414L12 10.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4z'\r\n    />\r\n  </svg>\r\n);","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 400px;\r\n  margin: 80px auto;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n  margin-left: auto;\r\n  & > svg {\r\n    transition: transform 0.5s;\r\n    transform: ${({ isOpen }) => isOpen ? 'rotate(-180deg)' : 'none'}\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  height: 600px;\r\n  box-sizing: border-box;\r\n  max-height: ${({ isOpen }) => (isOpen ? '300px' : '0')};\r\n  transition: max-height 0.7s ease;\r\n  margin: 0;\r\n  padding: 0 20px\r\n`;\r\n","import { useState } from 'react';\r\nimport { ChevronRightIcon } from './ChevronRightIcon';\r\nimport { Wrapper, Header, Icon, Text } from './styles';\r\n\r\nexport const Accordion = ({ header, text }) => {\r\n  const [isOpen, setOpen] = useState(false);\r\n  return (\r\n    <Wrapper>\r\n      <Header\r\n        onClick={() => {\r\n          setOpen(!isOpen);\r\n        }}\r\n      >\r\n        <h1>{header}</h1>\r\n        <Icon isOpen={isOpen}>{ChevronRightIcon}</Icon>\r\n      </Header>\r\n        <Text isOpen={isOpen}>{text}</Text>\r\n    </Wrapper>\r\n  );\r\n};","export const mock = {\r\n  header: 'Information',\r\n  text: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum`\r\n};\r\n","import './App.css';\nimport { Accordion } from './components/Accordion';\nimport { mock } from './utils/mock';\n\nconst App = () => <Accordion header={mock.header} text={mock.text} />\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}